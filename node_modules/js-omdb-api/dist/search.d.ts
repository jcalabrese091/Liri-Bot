export declare type TypeOfContent = "movie" | "series" | "episode";
export interface SearchResult {
    Title: string;
    Year: string;
    imdbID: string;
    Type: TypeOfContent;
    Poster: string;
    Released?: string;
    Runtime?: string;
    Genre?: string;
    Director?: string;
    Writer?: string;
    Actors?: string;
    Plot?: string;
    Language?: string;
    Country?: string;
    Awards?: string;
    Metascrore?: string;
    imdbRating?: string;
    imdbVotes?: string;
    totalSeasons?: number;
}
export interface SeasonResult {
    season: number;
    episodes: SearchResult[];
}
export interface ShowResult extends SearchResult {
    seasons: SeasonResult[];
}
export interface ApiResult {
    Search: SearchResult[];
    totalResults: string;
    Response: string;
}
export interface RequestParams {
    contentType?: TypeOfContent;
    year?: string;
    page?: number;
    plot?: string;
    includeTomatoesRating?: boolean;
}
export declare const findByIdWithSeasons: (imdbId: string) => Promise<ShowResult>;
export declare const findById: (imdbId: string, searchParams?: RequestParams) => Promise<SearchResult>;
export declare const findByTitle: (title: string, searchParams?: RequestParams) => Promise<SearchResult>;
export declare const search: (query: string, searchParams?: RequestParams) => Promise<ApiResult>;
