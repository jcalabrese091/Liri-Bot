"use strict";
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var client_1 = require("./client");
;
exports.findByIdWithSeasons = function (imdbId) {
    var show;
    return client_1.get({ imdbId: imdbId })
        .then(function (result) {
        show = result;
        var seasons = [];
        for (var i = 1; i <= result.totalSeasons; i++) {
            seasons.push(client_1.get({ imdbId: imdbId, season: i })
                .then(function (season) { return (__assign({}, season, { episodes: season.Episodes })); }));
        }
        return Promise.all(seasons);
    })
        .then(function (seasons) {
        return __assign({}, show, { seasons: seasons });
    });
};
exports.findById = function (imdbId, searchParams) {
    var params = __assign({}, searchParams, { imdbId: imdbId });
    return client_1.get(params);
};
exports.findByTitle = function (title, searchParams) {
    if (searchParams === void 0) { searchParams = {}; }
    var params = __assign({}, searchParams, { title: title });
    return client_1.get(params);
};
exports.search = function (query, searchParams) {
    var params = __assign({}, searchParams, { search: query });
    return client_1.get(params);
};
